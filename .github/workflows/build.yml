# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
  merge_group:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'ci:full') }}

permissions:
  contents: read

jobs:
  format:
    name: Format (dotnet format)
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: main/src/StrictDocOslcRmServer/
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          show-progress: false
          persist-credentials: false
          path: main
      - name: Setup .NET (8.x)
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: 8.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Verify formatting
        run: |
          dotnet format style --verify-no-changes
          dotnet format whitespace --verify-no-changes

  test:
    needs: [format]
    permissions:
      contents: read  # for actions/checkout to fetch code
      packages: write  # for setup-dotnet to create package
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-24.04,
          # ubuntu-24.04-arm,
          # windows-latest
        ]
        version:
          [
            # { setup: "8.x", target: "net8.0" },
            { setup: "9.x", target: "net9.0" },
            # { setup: "10.x", target: "net10.0" },
          ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: main/src/StrictDocOslcRmServer/
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      # TAG_VALUE: ${{ github.ref_name || inputs.version }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          show-progress: false
          persist-credentials: false
          path: main
      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: ${{ matrix.version.setup }}
      - name: Cache NuGet
        # id: cache-nuget
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        # env:
        #   cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ matrix.version.target }}-${{ hashFiles('.github/workflows/build.yml', '**/Directory.Build.props', '**/packages.config', '**/packages.lock.json', '**/*.sln', '**/*.csproj') }}
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test (with Refimpl CM tests)
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
